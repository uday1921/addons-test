---

configs:
  cm:
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs
params:
  controller.repo.server.timeout.seconds: 300
  controller.self.heal.timeout.seconds: 30
crds:
  install: true
  keep: false
server:
  extraArgs:
  - --insecure
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  replicas: 2
  service:
    type: ClusterIP
applicationSet:
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
notifications:
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
repoServer:
  liverinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  replicas: 2
dex:
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 32Mi
redis:
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
controller:
  liverinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
