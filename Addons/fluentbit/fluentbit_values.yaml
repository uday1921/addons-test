global:
## Override the deployment namespace
#   namespaceOverride:

image:
  repository: public.ecr.aws/aws-observability/aws-for-fluent-bit
  tag: 2.32.2.20240516
  pullPolicy: IfNotPresent


## To add extra environment variables to the pods, add as below
env:
  - name: AWS_REGION
    valueFrom:
      configMapKeyRef:
        name: fluent-bit-cluster-info
        key: AWS_REGION
  - name: CLUSTER_NAME
    valueFrom:
      configMapKeyRef:
        name: fluent-bit-cluster-info
        key: CLUSTER_NAME



service:
  ## Allow the service to be exposed for monitoring
  ## For liveness check to work, Health_Check must be set to On
  ## https://docs.fluentbit.io/manual/administration/monitoring
  extraService: |
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    Health_Check On 
    HC_Errors_Count 5 
    HC_Retry_Failure_Count 5 
    HC_Period 5 
    storage.path /var/fluent-bit/state/flb-storage/
    storage.sync normal
    storage.checksum off
    storage.backlog.mem_limit 5M

  parsersFiles:
    - /fluent-bit/parsers/parsers.conf
  extraParsers: |
    [PARSER]
        Name syslog
        Format regex
        Regex ^(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$ 
        Time_Key time
        Time_Format %b %d %H:%M:%S

    [PARSER]
        Name container_firstline
        Format regex
        Regex (?<log>(?<="log":")\S(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ

    [PARSER]
        Name cwagent_firstline
        Format regex
        Regex (?<log>(?<="log":")\d{4}[\/-]\d{1,2}[\/-]\d{1,2}[ T]\d{2}:\d{2}:\d{2}(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ   


input:
  enabled: true
additionalInputs: |
    [INPUT]
        Name tail
        Tag application.*
        Exclude_Path /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        DB /var/fluent-bit/state/flb_container.db
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Refresh_Interval 10
        Rotate_Wait 30
        storage.type filesystem
        Read_from_Head Off

    [INPUT]
        Name systemd
        Tag dataplane.systemd.*
        Systemd_Filter _SYSTEMD_UNIT=docker.service
        Systemd_Filter _SYSTEMD_UNIT=containerd.service
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        DB /var/fluent-bit/state/systemd.db
        Path /var/log/journal
        Read_From_Tail On

    [INPUT]
        Name tail
        Tag dataplane.tail.*
        Path /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
        multiline.parser docker, cri
        DB /var/fluent-bit/state/flb_dataplane_tail.db
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Refresh_Interval 10
        Rotate_Wait 30
        storage.type filesystem
        Read_from_Head Off

    [INPUT]
        Name tail
        Tag host.dmesg
        Path /var/log/dmesg
        Key message
        DB /var/fluent-bit/state/flb_dmesg.db
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
        Refresh_Interval 10
        Read_from_Head Off

    [INPUT]
        Name tail
        Tag host.messages
        Path /var/log/messages
        Parser syslog
        DB /var/fluent-bit/state/flb_messages.db
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
        Refresh_Interval 10
        Read_from_Head Off

    [INPUT]
        Name tail
        Tag host.secure
        Path /var/log/secure
        Parser syslog
        DB /var/fluent-bit/state/flb_secure.db
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
        Refresh_Interval 10
        Read_from_Head Off

filter:
 enabled: true
additionalFilters: |
    [FILTER]
        Name kubernetes
        Match application.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube-system.var.log.containers.
        Merge_Log On
        Merge_Log_Key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off
        Labels On
        Annotations Off
        Buffer_Size 0
        Use_Kubelet         true
        Kubelet_Port        10250


cloudWatchLogs:
  enabled: false
additionalOutputs: |
    [OUTPUT]
        Name cloudwatch_logs
        Match application.*
        region ${AWS_REGION}
        log_group_name      /aws/eks/${CLUSTER_NAME}/application
        log_stream_prefix ${HOSTNAME}-
        auto_create_group true
        log_group_template  /aws/eks/${CLUSTER_NAME}/$kubernetes['namespace_name'] 
        log_stream_template $kubernetes['host'].$kubernetes['pod_name']

    [OUTPUT]
        Name cloudwatch_logs
        Match host.*
        region ${AWS_REGION}
        log_group_name /aws/eks/${CLUSTER_NAME}/host
        log_stream_prefix ${HOSTNAME}-
        auto_create_group true
        

    [OUTPUT]
        Name cloudwatch_logs
        Match dataplane.*
        region ${AWS_REGION}
        log_group_name /aws/eks/${CLUSTER_NAME}/dataplane
        log_stream_prefix ${HOSTNAME}-
        auto_create_group true
        
        

hostNetwork: true
dnsPolicy: ClusterFirstWithHostNet


volumes:
  - name: rootfs
    hostPath:
      path: /
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: rootfs
    mountPath: /rootfs
    readOnly: true
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

# For livenessProbe to work - service.extraService must also enable Health_Check On
livenessProbe:
  httpGet:
    path: /api/v1/health
    port: 2020
    scheme: HTTP
  failureThreshold: 2
  initialDelaySeconds: 30
  timeoutSeconds: 10

readinessProbe: {}
  # httpGet:
  #   path: /api/v1/health
  #   port: 2020
  #   scheme: HTTP
  # failureThreshold: 2
  # initialDelaySeconds: 30
  # timeoutSeconds: 10

serviceMonitor:
  service: 
    type: ClusterIP
    port: 2020
    targetPort: 2020
    extraPorts: []
      # - port: 2021
      #   targetPort: 2021
      #   protocol: TCP
      #   name: metrics
  ## When set true then use a ServiceMonitor to configure scraping
  enabled: false
  interval: 30s
  telemetryPath: /api/v1/metrics/prometheus
  labels:
    # app: example-application
    # teamname: example
  timeout: 10s
  relabelings: []
  targetLabels: []
  metricRelabelings: []
  extraEndpoints: []
    # - port: metrics
    #   path: /metrics
    #   interval: 30s
    #   scrapeTimeout: 10s
    #   scheme: http